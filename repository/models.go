// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package repository

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type ExpenseType string

const (
	ExpenseTypeSALARY  ExpenseType = "SALARY"
	ExpenseTypeRENT    ExpenseType = "RENT"
	ExpenseTypeUTILITY ExpenseType = "UTILITY"
	ExpenseTypeFOOD    ExpenseType = "FOOD"
	ExpenseTypeTRAVEL  ExpenseType = "TRAVEL"
	ExpenseTypeOTHER   ExpenseType = "OTHER"
)

func (e *ExpenseType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ExpenseType(s)
	case string:
		*e = ExpenseType(s)
	default:
		return fmt.Errorf("unsupported scan type for ExpenseType: %T", src)
	}
	return nil
}

type NullExpenseType struct {
	ExpenseType ExpenseType
	Valid       bool // Valid is true if ExpenseType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullExpenseType) Scan(value interface{}) error {
	if value == nil {
		ns.ExpenseType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.ExpenseType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullExpenseType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.ExpenseType), nil
}

type InternalUserRole string

const (
	InternalUserRoleADMIN      InternalUserRole = "ADMIN"
	InternalUserRoleSUPERADMIN InternalUserRole = "SUPER_ADMIN"
)

func (e *InternalUserRole) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = InternalUserRole(s)
	case string:
		*e = InternalUserRole(s)
	default:
		return fmt.Errorf("unsupported scan type for InternalUserRole: %T", src)
	}
	return nil
}

type NullInternalUserRole struct {
	InternalUserRole InternalUserRole
	Valid            bool // Valid is true if InternalUserRole is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullInternalUserRole) Scan(value interface{}) error {
	if value == nil {
		ns.InternalUserRole, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.InternalUserRole.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullInternalUserRole) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.InternalUserRole), nil
}

type TransactionType string

const (
	TransactionTypeCREDIT TransactionType = "CREDIT"
	TransactionTypeDEBIT  TransactionType = "DEBIT"
)

func (e *TransactionType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = TransactionType(s)
	case string:
		*e = TransactionType(s)
	default:
		return fmt.Errorf("unsupported scan type for TransactionType: %T", src)
	}
	return nil
}

type NullTransactionType struct {
	TransactionType TransactionType
	Valid           bool // Valid is true if TransactionType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullTransactionType) Scan(value interface{}) error {
	if value == nil {
		ns.TransactionType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.TransactionType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullTransactionType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.TransactionType), nil
}

type UserRole string

const (
	UserRoleUSER UserRole = "USER"
)

func (e *UserRole) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UserRole(s)
	case string:
		*e = UserRole(s)
	default:
		return fmt.Errorf("unsupported scan type for UserRole: %T", src)
	}
	return nil
}

type NullUserRole struct {
	UserRole UserRole
	Valid    bool // Valid is true if UserRole is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullUserRole) Scan(value interface{}) error {
	if value == nil {
		ns.UserRole, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.UserRole.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullUserRole) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.UserRole), nil
}

type Batch struct {
	ID         int32
	ProductID  pgtype.Int4
	Quantity   int32
	CostPrice  pgtype.Numeric
	PurchaseID pgtype.Int4
	IsDummy    pgtype.Bool
	IsDeleted  pgtype.Bool
	CreatedAt  pgtype.Timestamp
	UpdatedAt  pgtype.Timestamp
	DeletedAt  pgtype.Timestamp
}

type Category struct {
	ID        int32
	Name      string
	IsDeleted pgtype.Bool
	CreatedAt pgtype.Timestamp
	UpdatedAt pgtype.Timestamp
	DeletedAt pgtype.Timestamp
}

type Customer struct {
	ID        int32
	Name      string
	Secret    string
	Email     string
	Phone     pgtype.Text
	IsActive  pgtype.Bool
	IsDeleted pgtype.Bool
	CreatedAt pgtype.Timestamp
	UpdatedAt pgtype.Timestamp
	DeletedAt pgtype.Timestamp
}

type Expense struct {
	ID          int32
	KioskID     pgtype.Int4
	Amount      pgtype.Numeric
	ExpenseDate pgtype.Timestamp
	Description pgtype.Text
	ExpenseType ExpenseType
	IsDummy     pgtype.Bool
	IsDeleted   pgtype.Bool
	CreatedAt   pgtype.Timestamp
	UpdatedAt   pgtype.Timestamp
	DeletedAt   pgtype.Timestamp
}

type InternalUser struct {
	ID        int32
	Name      string
	Email     string
	Password  string
	Role      InternalUserRole
	IsActive  pgtype.Bool
	IsDeleted pgtype.Bool
	CreatedAt pgtype.Timestamp
	UpdatedAt pgtype.Timestamp
	DeletedAt pgtype.Timestamp
}

type Journal struct {
	ID          int32
	KioskID     pgtype.Int4
	Amount      pgtype.Numeric
	TrxType     TransactionType
	Account     string
	Description pgtype.Text
	IsDummy     pgtype.Bool
	IsDeleted   pgtype.Bool
	CreatedAt   pgtype.Timestamp
	UpdatedAt   pgtype.Timestamp
	DeletedAt   pgtype.Timestamp
}

type Kiosk struct {
	ID           int32
	Name         string
	Location     pgtype.Text
	RegisteredBy pgtype.Int4
	IsDeleted    pgtype.Bool
	CreatedAt    pgtype.Timestamp
	UpdatedAt    pgtype.Timestamp
	DeletedAt    pgtype.Timestamp
}

type PrismaMigration struct {
	ID                string
	Checksum          string
	FinishedAt        pgtype.Timestamptz
	MigrationName     string
	Logs              pgtype.Text
	RolledBackAt      pgtype.Timestamptz
	StartedAt         pgtype.Timestamptz
	AppliedStepsCount int32
}

type Product struct {
	ID         int32
	CategoryID pgtype.Int4
	Name       string
	SalePrice  pgtype.Numeric
	Quantity   int32
	ImageUrl   pgtype.Text
	KioskID    pgtype.Int4
	IsDummy    pgtype.Bool
	IsDeleted  pgtype.Bool
	CreatedAt  pgtype.Timestamp
	UpdatedAt  pgtype.Timestamp
	DeletedAt  pgtype.Timestamp
}

type Purchase struct {
	ID           int32
	UserID       pgtype.Int4
	KioskID      pgtype.Int4
	PurchaseDate pgtype.Timestamp
	Amount       pgtype.Numeric
	IsDummy      pgtype.Bool
	IsDeleted    pgtype.Bool
	CreatedAt    pgtype.Timestamp
	UpdatedAt    pgtype.Timestamp
	DeletedAt    pgtype.Timestamp
}

type Sale struct {
	ID         int32
	CustomerID pgtype.Int4
	KioskID    pgtype.Int4
	SubTotal   pgtype.Numeric
	Discount   pgtype.Numeric
	Total      pgtype.Numeric
	Qty        int32
	SaleDate   pgtype.Timestamp
	IsDummy    pgtype.Bool
	IsDeleted  pgtype.Bool
	CreatedAt  pgtype.Timestamp
	UpdatedAt  pgtype.Timestamp
	DeletedAt  pgtype.Timestamp
}

type SaleProduct struct {
	ID        int32
	SaleID    pgtype.Int4
	ProductID pgtype.Int4
	Quantity  int32
	UnitPrice pgtype.Numeric
	Discount  pgtype.Numeric
	IsDummy   pgtype.Bool
	IsDeleted pgtype.Bool
	CreatedAt pgtype.Timestamp
	UpdatedAt pgtype.Timestamp
	DeletedAt pgtype.Timestamp
}

type Trx struct {
	ID         int32
	KioskID    pgtype.Int4
	Amount     pgtype.Numeric
	CustomerID pgtype.Int4
	VendorID   pgtype.Int4
	IsDummy    pgtype.Bool
	IsDeleted  pgtype.Bool
	CreatedAt  pgtype.Timestamp
	UpdatedAt  pgtype.Timestamp
	DeletedAt  pgtype.Timestamp
}

type User struct {
	ID        int32
	KioskID   pgtype.Int4
	Name      string
	Email     string
	Password  string
	Role      UserRole
	IsActive  pgtype.Bool
	IsDeleted pgtype.Bool
	CreatedAt pgtype.Timestamp
	UpdatedAt pgtype.Timestamp
	DeletedAt pgtype.Timestamp
}

type Vendor struct {
	ID          int32
	Name        string
	ContactInfo pgtype.Text
	IsDeleted   pgtype.Bool
	CreatedAt   pgtype.Timestamp
	UpdatedAt   pgtype.Timestamp
	DeletedAt   pgtype.Timestamp
}

type VendorProductPurchase struct {
	ID         int32
	VendorID   pgtype.Int4
	PurchaseID pgtype.Int4
	ProductID  pgtype.Int4
	Qty        int32
	CostPrice  pgtype.Numeric
	IsDummy    pgtype.Bool
	IsDeleted  pgtype.Bool
	CreatedAt  pgtype.Timestamp
	UpdatedAt  pgtype.Timestamp
	DeletedAt  pgtype.Timestamp
}
